apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/compare-options: ServerSideDiff=true
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://glaciation-heu.github.io/monitoring-stack/helm-charts/
    chart: monitoring-stack
    targetRevision: 1.0.*
    helm:
      valuesObject:
        prometheus:
          server:
            ingress:
              enabled: true
              ingressClassName: nginx
              hosts:
                - prometheus.integration
          extraScrapeConfigs: |
            - job_name: 'prometheus-node-exporter'
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                regex: '.*prometheus-node-exporter'
                action: keep
            - job_name: 'idrac-exporter'
              static_configs:
                - targets: ['10.14.2.6', '10.14.2.7']
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: monitoring-stack-idrac-exporter.monitoring.svc.cluster.local:9348  # The iDrac exporter's real hostname:port.      
            - job_name: 'prometheus-snmp-exporter'
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                regex: '.*prometheus-snmp-exporter'
                action: keep
            - job_name: 'dcgm-exporter'
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                regex: '.*dcgm-exporter'
                action: keep
            - job_name: 'kepler'
              kubernetes_sd_configs:
                - role: endpoints
              relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                regex: 'kepler'
                action: keep
            - job_name: 'k8s-ephemeral-storage-metrics'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                action: keep
                regex: 'k8s-ephemeral-storage-metrics'
              - source_labels: [__meta_kubernetes_pod_ip]
                replacement: '${1}:9100'
                target_label: __address__
            - job_name: 'snmp-pdus'
              static_configs:
                - targets:
                  - 10.14.2.3  # SNMP device PDU#1.
                  - 10.14.2.4 # SNMP device PDC#2.
              metrics_path: /snmp
              params:
                auth: [public_v2]
                module: [apcups]
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: monitoring-stack-prometheus-snmp-exporter.monitoring.svc.cluster.local:9116  # The SNMP exporter's real hostname:port.                
            - job_name: 'ray-head'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                action: keep
                regex: 'ray-cluster-kuberay-head'
            - job_name: 'ray-worker'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                action: keep
                regex: 'ray-cluster-kuberay-workergroup-worker'
            - job_name: 'jena-fuseki-exporter'
              scrape_interval: 10m
              static_configs:
              - targets:
                - 'jena-fuseki-exporter.dkg-engine.svc.cluster.local'
            - job_name: 'jenkins'
              metrics_path: '/prometheus'
              static_configs:
              - targets:
                - 'jenkins.jenkins.svc.cluster.local:8080'
              relabel_configs:
              - source_labels: [__address__]
                target_label: instance
                replacement: http://jenkins.integration
        telegraf:
          enabled: false
          resources:
            requests:
              memory: 1Gi
              cpu: 1
            limits:
              memory: 1Gi
              cpu: 1

          config:
            agent:
              metric_batch_size: 50000
              metric_buffer_limit: 500000
              interval: "5s"
              flush_interval: "5s"
              debug: true
            outputs:
              - influxdb_v2:
                  urls:
                    - "http://monitoring-stack-influxdb2"
                  token: encrypted
                  organization: "influxdata"
                  bucket: "prometheus"
                  timeout: "30s"
                  metric_batch_size: 50000
                  metric_buffer_limit: 500000

        influxdb:
          enabled: false

        kubernetes-event-exporter:
          config:
            receivers:
            - name: "dump"
              stdout:
                deDot: true
            - name: "loki"
              loki:
                streamLabels:
                  stream: kube-events
                url: http://monitoring-stack-loki:3100/loki/api/v1/push

        grafana:
          adminPassword: donkeyhot
          ingress:
            enabled: true
            ingressClassName: nginx
            path: /
            pathType: Prefix
            hosts:
              - grafana.integration
          grafana.ini:
            security:
              allow_embedding: true
            auth.anonymous:
              enabled: true
            auth:
              signout_redirect_url: /
            users:
              viewers_can_edit: true

        kepler:
          enabled: true

  syncPolicy:
    automated:
     prune: true
     selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
