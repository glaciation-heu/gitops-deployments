apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: spark-history-server
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
  - repoURL: https://glaciation-heu.github.io/spark-history-server
    chart: spark-history-server
    targetRevision: 1.0.4
    helm:
      valuesObject:
        secret:
          create: false
          name: minio-credentials

        s3:
          endpoint: minio.minio-tenant.svc.cluster.local
          bucket: sanitization/spark-events

        volumes:
        - name: ca
          configMap:
            defaultMode: 422
            name: ca-bundle

        volumeMounts:
        - name: ca
          mountPath: /etc/ssl/certs/ca.crt
          subPath: ca.crt
          readOnly: true
        - name: ca
          mountPath: /opt/java/openjdk/lib/security/cacerts
          subPath: ca.jks
          readOnly: true

        ingress:
          enabled: true
          className: nginx
          # annotations:
          #   # NOTE: To make sure the certificate is trusted by clients we should use
          #   # something like Let's Encrypt
          #   cert-manager.io/cluster-issuer: "private-ca-issuer"
          hosts:
          - host: spark-history-server.integration
            paths:
            - path: /
              pathType: Prefix
          # tls:
          # - hosts:
          #   - spark-history-server.integration
          #   secretName: spark-history-server-ingress

        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi
  destination:
    namespace: spark-app
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - ServerSideApply=true
